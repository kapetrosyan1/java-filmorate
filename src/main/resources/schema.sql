DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS friends CASCADE;
DROP TABLE IF EXISTS mpa CASCADE;
DROP TABLE IF EXISTS films CASCADE;
DROP TABLE IF EXISTS likes CASCADE;
DROP TABLE IF EXISTS genres CASCADE;
DROP TABLE IF EXISTS film_genre CASCADE;

CREATE TABLE IF NOT EXISTS users (
user_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
email varchar NOT NULL,
login varchar NOT NULL,
name varchar,
birthday date NOT NULL,
CONSTRAINT uq_user_email UNIQUE (email),
CONSTRAINT uq_user_login UNIQUE (login)
);

CREATE TABLE IF NOT EXISTS friends (
user_id integer NOT NULL REFERENCES users (user_id) ON DELETE CASCADE,
friend_id integer NOT NULL REFERENCES users (user_id) ON DELETE CASCADE,
CONSTRAINT pk_friends PRIMARY KEY (user_id, friend_id)
);

CREATE TABLE IF NOT EXISTS mpa (
mpa_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name varchar(10) NOT NULL,
CONSTRAINT uq_mpa_name UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS films (
film_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name varchar NOT NULL,
description varchar(200),
mpa_id integer NOT NULL REFERENCES mpa (mpa_id) ON DELETE CASCADE,
release_date date,
duration integer NOT NULL
);

CREATE TABLE IF NOT EXISTS likes (
film_id integer NOT NULL REFERENCES films (film_id) ON DELETE CASCADE,
user_id integer NOT NULL REFERENCES users (user_id) ON DELETE CASCADE,
CONSTRAINT pk_films_likes PRIMARY KEY (film_id,user_id)
);

CREATE TABLE IF NOT EXISTS genres (
genre_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name varchar(20) NOT NULL,
CONSTRAINT uq_genres_name UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS film_genre (
film_id integer REFERENCES films (film_id) ON DELETE CASCADE,
genre_id integer REFERENCES genres (genre_id) ON DELETE CASCADE,
CONSTRAINT pk_film_genre PRIMARY KEY (film_id,genre_id)
);