DROP TABLE IF EXISTS users, friends, mpa, genres, films, film_genres, likes;

CREATE TABLE IF NOT EXISTS users (
user_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
email varchar(255) NOT NULL UNIQUE,
login varchar(255) NOT NULL UNIQUE,
name varchar(255) NOT NULL,
birthday date
);

CREATE TABLE IF NOT EXISTS friends (
user_id integer NOT NULL REFERENCES users (user_id) ON DELETE CASCADE,
friend_id integer NOT NULL REFERENCES users (user_id) ON DELETE CASCADE,
CONSTRAINT pk_friends PRIMARY KEY (user_id, friend_id)
);

CREATE TABLE IF NOT EXISTS mpa (
mpa_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name varchar(20) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS genres (
genre_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name varchar(20) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS films (
film_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name varchar(255) NOT NULL,
description varchar(200),
mpa_id integer NOT NULL REFERENCES mpa (mpa_id) ON DELETE CASCADE,
release_date date,
duration integer
);

CREATE TABLE IF NOT EXISTS film_genres (
film_id integer NOT NULL REFERENCES films (film_id) ON DELETE CASCADE,
genre_id integer NOT NULL REFERENCES genres (genre_id) ON DELETE CASCADE,
CONSTRAINT pk_fg PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS likes (
film_id integer NOT NULL REFERENCES films (film_id) ON DELETE CASCADE,
user_id integer NOT NULL REFERENCES users (user_id) ON DELETE CASCADE,
CONSTRAINT pk_likes PRIMARY KEY (film_id, user_id)
);